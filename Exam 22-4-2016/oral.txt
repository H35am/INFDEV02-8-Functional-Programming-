1.
Write a function that, given two numbers, prints "Fizz" 
if the first number is divisible by 4, 
"Buzz" if the second is divisible by 4, 
"FizzBuzz" if both are divisible by 4.

2. 
Write a function "zip" that takes two lists of equal length 
and returns the list of pairs containing
the elements in the same position. For example:

zip [1;2;3] [4;5;6] = [(1,4);(2,5);(3,6)]

Write the function "unzip" that does the opposite:

unzip [(1,4);(2,5);(3,6)] = ([1;2;3],[4;5;6])

3.
An arithmetic expression can be a number or sum, product, difference, 
or division of two arithmetic expressions. Define an arithmetic 
expression as a discriminate union and write a function that evaluates it.

4.
A ship is a record containin a position, which is a pair of floating point numbers, 
and a list of projectiles positions. Write a function "update" that returns a ship 
where the first component of each projectile position has been increased by
0.1 and the second by 0.3.

5.
An input system is made of a list of possible actions (Move, Shoot, ...), 
and a function that takes a Ship and returns an updated
Ship after the action execution. Write a function "execute" 
that takes an action as input and returns the updated ship after 
the function execution.  Model the action as a discriminate union.

let execute (action : Action) (ship : Ship) : Ship = ...